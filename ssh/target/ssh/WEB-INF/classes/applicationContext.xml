<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jpa="http://www.springframework.org/schema/data/jpa" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
    http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
    http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
    http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd
    http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
    http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.0.xsd">
	<!-- 引入外部的属性文件 -->
	<context:property-placeholder location="classpath:jdbc.properties"
		ignore-unresolvable="true" />
	<!-- 创建连接池 -->
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<property name="driverClass" value="${jdbc.driverClass}"></property>
		<property name="jdbcUrl" value="${jdbc.url}"></property>
		<property name="user" value="${jdbc.username}"></property>
		<property name="password" value="${jdbc.password}"></property>
	</bean>
	<!--<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" 
		init-method="init" destroy-method="close"> -->
	<!--<property name="url" value="${jdbc.url}" /> -->
	<!--<property name="username" value="${jdbc.username}" /> -->
	<!--<property name="password" value="${jdbc.password}" /> -->
	<!--</bean> -->
	<!-- 配置hibernate属性 -->
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<!-- 注入连接池 -->
		<property name="dataSource" ref="dataSource"></property>
		<!-- 配置hibernate属性 -->
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
				<prop key="hibernate.show_sql">true</prop>
				<prop key="hibernate.format_sql">true</prop>
				<prop key="hibernate.hbm2ddl.auto">update</prop>
			</props>
		</property>
		<!-- 加载hibernate的映射文件 -->
		<property name="mappingResources">
			<list>
				<value>com/muke/ssh/domin/Product.hbm.xml</value>
			</list>
		</property>
	</bean>
	
	<!-- 注册商品 -->
	<bean id="productAction" class="com.muke.ssh.action.ProductAction"
		scope="prototype">
		<property name="productService" ref="productService"></property>
	</bean>

	<bean id="productService" class="com.muke.ssh.service.ProductService">
		<property name="productDao" ref="productDao"></property>
	</bean>

	<bean id="productDao" class="com.muke.ssh.dao.ProductDao">
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>
    
     <!-- 发送邮箱 -->
     <bean id="userAction" class="com.muke.ssh.action.UserAction"
		scope="prototype">
		<property name="userDao" ref="productService"></property>
	</bean>

	<bean id="userService" class="com.muke.ssh.service.UserService">
		<property name="userDao" ref="userDao"></property>
	</bean>

	<bean id="userDao" class="com.muke.ssh.dao.UserDao">
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>
	<!-- 配置事务管理器 -->
	<bean id="transactionManager"
		class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>
	<!-- 开启注解事务 -->
	<tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="false"/>

</beans>

 
